name: Build

# Указываем, когда будет запускаться workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_on_linux:
    name: Build Project on Linux
    # Указываем систему, на который будем билдить проект
    runs-on: ubuntu-latest

    # Клонируем репозиторий
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

    # Компилируем main.cpp под Linux
      - name: Build Project
        run: |
          g++ -o calculator main.cpp

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: calculator
          path: calculator
  
  
  build_on_windows:
    name: Build Project on Windows
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Устанавливаем Clang как компилятор для Windows
      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest
          platform: x64

      # Билдим проект под Windows
      - name: Build with Clang
        run: |
          clang++ main.cpp -o calculator.exe

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: calculator.exe
          path: calculator.exe

  # Анализ кода с помощью Codacy
  analyse_code:
    name: Analyse Project code with Codecy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@master

  # Проверка корректности форматирования
  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run clang-format style check for C/C++/Protobuf programs.
        uses: jidicula/clang-format-action@v4.11.0
        with:
          clang-format-version: '13'
          check-path: 'src'

  # Контейнеризация приложения
  docker_application:
    name: Application Containerization
    runs-on: ubuntu-latest
    needs: [build_on_linux, tests]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ubuntu-calculator:latest

  send_to_telgram:
    name: Send Artifacts to Telegram
    needs: build_on_windows
    runs-on: ubuntu-latest
    
    steps:    

      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: calculator.exe

      - name: Archive C++ Application
        run: |
          7z a calculator.7z calculator.exe

      - name: Send Telegram message
        uses: appleboy/telegram-action@master
        with:
            to: ${{ secrets.TELEGRAM_CHAT_ID }}
            token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
            message: Windows Application
            document: calculator.7z    


  tests:
    name: Application Testing
    needs: build_on_linux
    runs-on: ubuntu-latest
    

    steps:
      
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: calculator

      - name: Change file permissions
        run: chmod +x calculator

      - name: Run tests
        run: |
          ./calculator < tests/input.txt > output.txt

      - name: Check test results
        run: |
          diff output.txt tests/expected_output.txt

  # Контейнеризация приложения
  deploy_to_local_machine:
    name: Deploy to local machine
    runs-on: self-hosted
    needs: docker_application


    steps:

      - name: Deploy to local machine
        run: |
          docker run -it -p 8080:80 ${{ secrets.DOCKERHUB_USERNAME }}/ubuntu-calculator:latest